{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,mBAAmB,CAAC;AAExD,kFAAkF;AAClF,iGAAiG;AACjG,MAAM,4BAA4B,GAAG,mBAAmB,CACtD,8BAA8B,CAC/B,CAAC;AAEF;;;GAGG;AACH,MAAM,CAAC,KAAK,UAAU,WAAW;IAC/B,OAAO,MAAM,4BAA4B,CAAC,WAAW,EAAE,CAAC;AAC1D,CAAC;AAED;;;;;;GAMG;AACH,MAAM,CAAC,KAAK,UAAU,OAAO,CAAC,cAAsB;IAClD,oDAAoD;IACpD,IAAI,CAAC,cAAc,IAAI,OAAO,cAAc,KAAK,QAAQ,EAAE,CAAC;QAC1D,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;IACvD,CAAC;IACD,OAAO,MAAM,4BAA4B,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AACpE,CAAC;AAED,kGAAkG;AAClG,iCAAiC;AACjC,kDAAkD","sourcesContent":["import { requireNativeModule } from \"expo-modules-core\";\n\n// Import the native module. The name 'ExpoAndroidEsimManager' here needs to match\n// the name defined in the Kotlin module's `definition` block (`Name(\"ExpoAndroidEsimManager\")`).\nconst ExpoAndroidEsimManagerModule = requireNativeModule(\n  \"ExpoAndroidEsimManagerModule\"\n);\n\n/**\n * Checks if the device supports eSIM functionality.\n * @returns A promise that resolves with `true` if eSIM is supported, `false` otherwise.\n */\nexport async function isSupported(): Promise<boolean> {\n  return await ExpoAndroidEsimManagerModule.isSupported();\n}\n\n/**\n * Initiates the eSIM installation process using an activation code.\n * @param activationCode The activation code string (e.g., \"1$smdp.address$matchingId\").\n * @returns A promise that resolves with \"Success\" if the download is initiated successfully\n *          (or completes immediately), or rejects with an error if initiation fails\n *          or the download fails later (potentially after user interaction).\n */\nexport async function install(activationCode: string): Promise<string> {\n  // Basic validation to prevent sending empty strings\n  if (!activationCode || typeof activationCode !== \"string\") {\n    throw new Error(\"Invalid activation code provided.\");\n  }\n  return await ExpoAndroidEsimManagerModule.install(activationCode);\n}\n\n// If your module originally exported types or views, you might need to re-add those exports here.\n// For example, if you had types:\n// export * from './ExpoAndroidEsimManager.types';\n"]}